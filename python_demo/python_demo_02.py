#  输入温度
# a = float(input("请输入摄氏温度： "))
b = float(input("请输入华氏温度： "))

# 转换温度
# c = a*9/5+32
d = 5/9*(b-32)

# 输出结果
# print("摄氏温度{}转换为华氏温度为：{}".format(a,c))
print("华氏温度{}转换为摄氏温度为：{}".format(b,d))



# 计算圆的面积
r = float(input("请输入圆的半径： "))
pi = 3.142
s = pi * (r*r)

print("圆的面积为：",s)



# 判断是否是闰年

year = int(input("请输入年份:"))

if ((year % 4 ==0) and year % 100 !=0) or (year % 400 == 0):
    print("是闰年")
else:
    print("不是闰年")


"""
笔记

python中数字有四种类型：整数、布尔型、浮点数和复数。int,bool,float,complex.

Python 中的变量不需要声明。每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。
在 Python 中，变量就是变量，它没有类型，我们所说的"类型"是变量所指的内存中对象的类型。
等号（=）用来给变量赋值。
等号（=）运算符左边是一个变量名,等号（=）运算符右边是存储在变量中的值

Python允许你同时为多个变量赋值。比如：a = b = c = 1
也可以为多个对象指定多个变量。比如：a, b, c = 1, 2, "hello"


Python中的字符串用单引号 ' 或双引号 " 括起来，同时使用反斜杠 \ 转义特殊字符。

数据类型转换：
函数	描述
int(x [,base])      将x转换为一个整数

float(x)            将x转换到一个浮点数

complex(real [,imag])   创建一个复数

str(x)                 将对象 x 转换为字符串

repr(x)                 将对象 x 转换为表达式字符串

eval(str)               用来计算在字符串中的有效Python表达式,并返回一个对象

tuple(s)                将序列 s 转换为一个元组

list(s)                 将序列 s 转换为一个列表

set(s)                  转换为可变集合

dict(d)                 创建一个字典。d 必须是一个序列 (key,value)元组。

frozenset(s)            转换为不可变集合

chr(x)                  将一个整数转换为一个字符

ord(x)                  将一个字符转换为它的整数值

hex(x)                  将一个整数转换为一个十六进制字符串

oct(x)                  将一个整数转换为一个八进制字符串


运算符：
算数运算符
+   相加
-   相减
*   相乘
/   除
%   取模-返回除法的余数
**  幂-返回x的y次幂
//  取整除-向下取接近除数的整数。

比较运算符
==      等于
！=      不等于
>       大于
<       小于
>=      大于等于
<=      小于等于

赋值运算符
=       简单赋值--值不变
+=      加法赋值
-=      减法赋值
*=      乘法赋值
/=      除法赋值
%=      取模赋值
**=     幂赋值
//=     取整除赋值


按位运算符
&       参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0
|       只要对应的二个二进位有一个为1时，结果位就为1。
^       当两对应的二进位相异时，结果为1
~       对数据的每个二进制位取反,即把1变为0,把0变为1。~x 类似于 -x-1
<<      运算数的各二进位全部左移若干位，由"<<"右边的数指定移动的位数，高位丢弃，低位补0。
>>      把">>"左边的运算数的各二进位全部右移若干位，">>"右边的数指定移动的位数



逻辑运算符
and     布尔"与" - 如果 x 为 False，x and y 返回 False，否则它返回 y 的计算值。
or         布尔"或" - 如果 x 是 True，它返回 x 的值，否则它返回 y 的计算值。
not         布尔"非" - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。


成员运算符

in          如果在指定的序列中找到值返回 True，否则返回 False。
not in      如果在指定的序列中没有找到值返回 True，否则返回 False。

身份运算符

is          	is 是判断两个标识符是不是引用自一个对象
is not          is not 是判断两个标识符是不是引用自不同对象


Python的运算符优先级
**	                        指数 (最高优先级)
~ + -	                    按位翻转, 一元加号和减号 (最后两个的方法名为 +@ 和 -@)
* / % //	                乘，除，取模和取整除
+ -	                        加法减法
>> <<	                    右移，左移运算符
&	                        位 'AND'
^ |	                        位运算符
<= < > >=	                比较运算符
<> == !=	                等于运算符
= %= /= //= -= += *= **=	赋值运算符
is is not	                身份运算符
in not in	                成员运算符
and or not	                逻辑运算符
"""






















